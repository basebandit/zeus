apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zeus-repo
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repository
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: argocd
    kind: SecretStore
  target:
    name: zeus-repo
    creationPolicy: Owner
    deletionPolicy: Delete
    template:
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repository
  data:
    - secretKey: url
      remoteRef:
        key: /infra/argo/staging-basebandit-eks-cluster/zeus-repo-config
        property: url
    - secretKey: sshPrivateKey
      remoteRef:
        key: /infra/argo/staging-basebandit-eks-cluster/zeus-repo-config
        property: sshPrivateKey
    - secretKey: enableLfs
      remoteRef:
        key: /infra/argo/staging-basebandit-eks-cluster/zeus-repo-config
        property: enableLfs
    - secretKey: insecure
      remoteRef:
        key: /infra/argo/staging-basebandit-eks-cluster/zeus-repo-config
        property: insecure
    - secretKey: mtime
      remoteRef:
        key: /infra/argo/staging-basebandit-eks-cluster/zeus-repo-config
        property: mtime


// TODO: Apply the git secret repo secrets manifest to the argocd anmespace manually using kubectl then countercheck the argocd root app for botstrapping confirm that the refernece helm vaues faile are ok. 